// This #include statement was automatically added by the Particle IDE.
#include <MQTT.h>
#include <PietteTech_DHT.h>


//https://github.com/piettetech/PietteTech_DHT/blob/master/firmware/examples/DHT_example.cpp


// Parámetros DHT
#define DHTTYPE  DHT22  
#define DHTPIN   D1  
#define DHT_SAMPLE_INTERVAL   2000  // Sample every two seconds

int light_sensor_pin = A0;
int light;
int power = A5;
int led = D5;

void dht_wrapper();

// Lib Initialize
PietteTech_DHT DHT(DHTPIN, DHTTYPE, dht_wrapper);

// globals
unsigned int DHTnextSampleTime; // Next time we want to start sample




void setup() {
    DHTnextSampleTime = 0;
    pinMode(light_sensor_pin, INPUT);
    pinMode(power, OUTPUT);
    digitalWrite(power,HIGH);
    pinMode(led, OUTPUT);
}

void dht_wrapper() {
    DHT.isrCallback();
}

void loop()
{
  // Light level measurement
  float light_measurement = analogRead(light_sensor_pin);
  light = (int)(light_measurement);
  

  if (millis() > DHTnextSampleTime) {
	DHT.acquire();

    if (!DHT.acquiring()) {		//Si ha terminado de recibir

        //int result = DHT.getStatus();
        float humedad = DHT.getHumidity();
        float tempc = DHT.getCelsius();
    
        Particle.publish("Humedad", String(humedad) + "%");
        Particle.publish("Temperatura", String(tempc) + " °C");
        Spark.publish("Luz", String(light) + "%");
        digitalWrite(led, HIGH);
        delay(250);
        digitalWrite(led, LOW);
    
        DHTnextSampleTime = millis() + DHT_SAMPLE_INTERVAL;
    }
  }
}